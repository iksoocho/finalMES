<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.produce.mapper.WorkMapper">
	
	<!-- workRegistPage LoadData -->
	<select id="getLoadData" parameterType="String" resultType="WorkLoadVO">
		SELECT 
			f.prod_code
			, (SELECT prod_name 
			   FROM product 
			   WHERE prod_code=f.prod_code) AS prod_name
			, f.flow_code
			, f.proc_code
			, p.proc_name
		FROM 
			process_flow f join process p 
			on f.proc_code = p.proc_code 
		WHERE 
			f.prod_code = #{prodCode}
		ORDER BY 
			f.proc_seq
	</select>
	
	
	<select id="getFacSelect" parameterType="String" resultType="FacCateVO">
		SELECT 
			f.fac_code
			, f.fac_name
			, f.proc_code
			, p.proc_name
			, n.fac_not_situation fac_state
		FROM fac_manage f 
		JOIN process p ON f.proc_code=p.proc_code
		JOIN fac_notop n ON f.fac_code=n.fac_code
		WHERE f.proc_code=#{procCode}
	</select>

	<select id="getProcData" resultType="ProcessVO">
		SELECT proc_code, proc_name
		FROM process
	</select>
	
	
	<!-- 작업중간등록 -->
	<insert id="insertWorkMidRegist" parameterType="WorkMidRegistVO">
		INSERT INTO prod_progress(
		    d_ins_code
		    , proc_code
		    , prog_ins_count
		    , prog_bad_count
		    , prog_pass_count
		    , prog_state
		    , start_time
		    , end_time
		)
		VALUES(
		    #{dInsCode}
		    , #{procCode}
		    , #{progInsCount}
		    , #{progBadCount}
		    , #{progPassCount}
		    , 0
		    , TO_TIMESTAMP(#{startTime}, 'YY-MM-DD HH24:MI')
		    , TO_TIMESTAMP(#{endTime}, 'YY-MM-DD HH24:MI')
		)
	</insert>
	
	
	<select id="checkWorkMidRegist" parameterType="String" resultType="WorkMidRegistVO">
		SELECT * 
		FROM prod_progress 
		WHERE d_ins_code = #{dinsCode} 
		AND proc_code = #{procCode}
	</select>
	
	
	
	<update id="updateWorkMidRegist" parameterType="WorkMidRegistVO">
		UPDATE prod_progress 
		SET 
			prog_bad_count = (#{progBadCount} + prog_bad_count)
			, prog_pass_count = (#{progPassCount} + prog_pass_count)
			, end_time = TO_TIMESTAMP(#{endTime}, 'YY-MM-DD HH24:MI')
		WHERE prog_code= #{progCode}
	</update>


</mapper>