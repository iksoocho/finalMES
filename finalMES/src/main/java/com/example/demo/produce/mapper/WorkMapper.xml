<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.produce.mapper.WorkMapper">
	
	<!-- workRegistPage LoadData -->
	<select id="getLoadData" parameterType="String" resultType="WorkLoadVO">
		SELECT 
			f.prod_code
			, (SELECT prod_name 
			   FROM product 
			   WHERE prod_code=f.prod_code) AS prod_name
			, f.flow_code
			, f.proc_code
			, p.proc_name
			, f.proc_seq
		FROM 
			process_flow f join process p 
			on f.proc_code = p.proc_code 
		WHERE 
			f.prod_code = #{prodCode}
		ORDER BY 
			f.proc_seq
	</select>
	
	
	<select id="getFacSelect" parameterType="String" resultType="FacCateVO">
		SELECT 
			f.fac_code
			, f.fac_name
			, f.proc_code
			, p.proc_name
			, n.fac_not_situation fac_state
		FROM fac_manage f 
		JOIN process p ON f.proc_code=p.proc_code
		JOIN fac_notop n ON f.fac_code=n.fac_code
		WHERE f.proc_code=#{procCode}
		AND n.fac_not_situation = 'f1'
	</select>

	<select id="getProcData" resultType="ProcessVO">
		SELECT proc_code, proc_name
		FROM process 
		ORDER BY proc_code
	</select>
	
	<select id="getProdProgress" parameterType="String" resultType="ProdProgressJoinVO">
		SELECT pr.proc_name, pg.prog_state, pg.prog_ins_count, pg.prog_pass_count
		FROM process pr 
		LEFT join prod_progress pg 
		ON pg.proc_code=pr.proc_code 
		AND d_ins_code=#{dInsCode}
		ORDER BY pr.proc_code
	</select>
	
	<!-- 작업중간등록 -->
	<insert id="insertWorkMidRegist" parameterType="WorkMidRegistVO">
		INSERT INTO prod_progress(
		    d_ins_code
		    , proc_code
		    , prog_seq
		    , prog_ins_count
		    , prog_bad_count
		    , prog_pass_count
		    , prog_state
		    , start_time
		    , end_time
		    , prog_worker
		)
		VALUES(
		    #{dInsCode}
		    , #{procCode}
		    , (	SELECT proc_seq 
				FROM process_flow
				WHERE proc_code = #{procCode}
				AND prod_code = #{prodCode})
		    , #{progInsCount}
		    , #{progBadCount}
		    , #{progPassCount}
		    , #{progState}
		    , TO_TIMESTAMP(#{startTime}, 'YY-MM-DD HH24:MI')
		    , TO_TIMESTAMP(#{endTime}, 'YY-MM-DD HH24:MI')
		    , #{progWorker}
		)
	</insert>
	
	
	<select id="checkWorkMidRegist" parameterType="String" resultType="WorkMidRegistVO">
		SELECT * 
		FROM prod_progress 
		WHERE d_ins_code = #{dinsCode} 
		AND proc_code = #{procCode}
	</select>
	
	
	
	<update id="updateWorkMidRegist" parameterType="WorkMidRegistVO">
		UPDATE prod_progress 
		SET 
			prog_bad_count = (#{progBadCount} + prog_bad_count)
			, prog_pass_count = (#{progPassCount} + prog_pass_count)
			, end_time = TO_TIMESTAMP(#{endTime}, 'YY-MM-DD HH24:MI')
			, prog_state = #{progState}
		WHERE prog_code= #{progCode}
	</update>
	
	<insert id="insertWorkResult" parameterType="String">
		INSERT INTO prod_result(
			proc_code
			, d_ins_code
			, result_worker
			, result_s_time
			, result_e_time
			, result_work_count
			, result_bad_count
			, result_pass_count)
		SELECT 
			proc_code
			, d_ins_code
			, prog_worker
			, start_time
			, end_time
			, prog_ins_count
			, prog_bad_count
			, prog_pass_count 
		FROM prod_progress
		WHERE d_ins_code = #{dInsCode}
	</insert>

	<update id="updateProdInsState" parameterType="String">
		UPDATE prod_instruction 
		SET ins_state='i2' 
		WHERE ins_code=(SELECT ins_code 
						FROM prod_d_ins 
						WHERE d_ins_code=#{dInsCode})
	</update>
	
	<update id="updateOrdListState" parameterType="String">
		UPDATE ord_list 
		SET ord_state='o4' 
		WHERE ord_code=(SELECT ord_code 
						FROM prod_plan 
						WHERE plan_code=(SELECT plan_code 
										FROM prod_instruction 
										WHERE ins_code=(SELECT ins_code 
														FROM prod_d_ins 
														WHERE d_ins_code=#{dInsCode})))
	</update>


</mapper>