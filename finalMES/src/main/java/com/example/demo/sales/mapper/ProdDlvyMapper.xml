<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.sales.mapper.ProdDlvyMapper">

	<!-- 출고서 부모 -->
	<insert id="saveDlvy" parameterType="ProdDlvyVO">
		<selectKey keyProperty="outCode" resultType="string"
			order="BEFORE">
			SELECT 'O' || #{ordCode} AS outCode FROM DUAL
		</selectKey>
		INSERT INTO OUT_LIST(out_code, ord_code, out_date, out_manager,
		out_state)
		VALUES(#{outCode}, #{ordCode}, #{outDate}, #{outManager},
		#{outState})
	</insert>
	
	<!-- 출고서 자식 -->
	<insert id="saveDetailDlvy" parameterType="ProdDetailDlvyVO">
		INSERT INTO
		OUT_D_LIST(out_d_code, out_code, prod_lot_code, ord_d_code, out_count, out_d_state)
		VALUES(#{outDCode}, #{outCode}, #{prodLotCode}, #{ordDCode}, #{outCount}, #{outDState})
	</insert>
	
	<!-- 출고등록시 재고량 계산 -->
	<update id="updateInventory" parameterType="ProductLotDVO">
		UPDATE prod_lot
    	SET prod_count = prod_count - #{prodOutputCount},
        prod_output_count = COALESCE(prod_output_count, 0) + #{prodOutputCount}
    	WHERE prod_lot_code = #{prodLotCode}
	</update> 
	
	<!-- 출고등록시 주문서 상태 변경 -->
	<update id="updateOrderState" parameterType="OrderVO">
    	UPDATE ord_list
    	SET ord_state = 'o3'
    	WHERE ord_code = #{ordCode}
	</update>
	
	<!-- 출고서 조회 -->
	<select id="prodDlvyList" resultType="ProdDlvyDVO">
		SELECT outl.out_code, outl.out_date, outl.out_manager, find_codename(outl.out_state) AS out_state, bus.business_name, ordl.ord_code
		FROM out_list outl
		LEFT JOIN ord_list ordl ON(outl.ord_code = ordl.ord_code)
		LEFT JOIN business bus ON(ordl.business_code = bus.business_code)
		ORDER BY outl.out_date
	</select>
	
	<!-- 출고 상세 조회 -->
	<select id="prodDetailDlvyList" resultType="ProdDetailDlvyDVO">
		SELECT prod.prod_code, prod.prod_name, prod.prod_unit, prodl.prod_lot_code, prodl.prod_count, outdl.out_count, prod.prod_price, 
           (prod.prod_price * outdl.out_count) AS out_ttl_price,
           outdl.out_d_date,
           find_codename(outdl.out_d_state) AS out_d_state,
           outdl.out_d_code
		FROM out_d_list outdl 
		LEFT JOIN ord_d_list orddl ON(orddl.ord_d_code = outdl.ord_d_code)
		LEFT JOIN product prod ON(prod.prod_code = orddl.prod_code)
		LEFT JOIN prod_lot prodl ON(prodl.prod_lot_code = outdl.prod_lot_code)
		WHERE outdl.out_code = #{outCode}
	</select>
	
	<!-- 출고 상세 리스트 날짜 업데이트 -->
	<update id="updateOutDDate" parameterType="ProdDetailUpdateDVO">
		UPDATE out_d_list
		SET out_d_date = #{outDDate}, out_d_state = 'dlvyD2'
		WHERE out_d_code = #{outDCode}
	</update>
	
	<update id="updateOutState" parameterType="String">
		UPDATE out_list
		SET out_state = 
    		CASE
    
        		WHEN NOT EXISTS (
            		SELECT 1
            		FROM out_d_list
            		WHERE out_code = #{outCode}
            		AND out_d_state != 'dlvyD1'
        		)
        		THEN 'dlvy2'
        
        		WHEN EXISTS (
            		SELECT 1
            		FROM out_d_list
            		WHERE out_code = #{outCode}
            		AND out_d_state = 'dlvyD1'
        		)
        		THEN 'dlvy3'
        		
        		WHEN NOT EXISTS (
            		SELECT 1
            		FROM out_d_list
            		WHERE out_code = #{outCode}
            		AND out_d_state != 'dlvyD2'
        		)
        		THEN 'dlvy4'
    		END
		WHERE out_code = #{outCode}
	</update>
	
</mapper>
 