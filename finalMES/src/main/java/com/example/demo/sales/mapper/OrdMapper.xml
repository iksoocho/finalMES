<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.sales.mapper.OrdMapper">

	<select id="getOrder" resultType="OrderVO">
		SELECT * FROM ord_list
		WHERE
		ord_code = #{ordCode}
	</select>

	<select id="getOrderDetail" resultType="OrderDetailVO">
		SELECT * FROM ord_d_list
		WHERE ord_d_code = #{ordDCode}
	</select>

	<insert id="saveOrder" parameterType="OrderVO">
		<selectKey keyProperty="ordCode" resultType="string"
			order="BEFORE">
			SELECT
			#{businessCode} ||
			'-' ||
			TO_CHAR(SYSDATE, 'YYYYMMDD') ||
			'-' ||
			LPAD(
			COALESCE(
			(SELECT MAX(TO_NUMBER(SUBSTR(ord_code, -3))) + 1
			FROM ord_list
			WHERE business_code = #{businessCode}),
			1
			),
			3,
			'0'
			) AS
			ordCode
			FROM dual
		</selectKey>
		INSERT INTO
		ord_list(ord_code, business_code, ord_date, ord_manager,
		ord_state,
		ord_note)
		VALUES(#{ordCode}, #{businessCode}, #{ordDate},
		#{ordManager}, #{ordState}, #{ordNote})
	</insert>

	<insert id="saveOrderDetail" parameterType="OrderDetailVO">
		INSERT INTO
		ord_d_list(ord_d_code, prod_code, ord_code, ord_count, dlvy_date,
		ttl_price)
		VALUES(#{ordDCode}, #{prodCode}, #{ordCode}, #{ordCount},
		#{dlvyDate}, #{ttlPrice})
	</insert>

	<select id="getOrderWithDetails" resultType="OrderVO">
		SELECT ord.*,
		ord_d.*
		FROM ord_list ord
		LEFT JOIN ord_d_list ord_d ON ord.ord_code =
		ord_d.ord_code
		WHERE ord.ord_code = #{ordCode}
	</select>


	<select id="getOrderList" resultType="OrderDVO">
		SELECT
		ord.ord_code,
		find_codename(ord.ord_state) ord_state_nm,
		ord_state,
		business.business_name,
		business.business_code,
		business.business_manager,
		business.business_manager_phone,
		ord.ord_date,
		ord.ord_manager,
		(select SUM(ord_d.ttl_price)from ord_d_list ord_d where ord.ord_code =
		ord_d.ord_code ) AS total_ttl_price,
		ord.ord_note

		FROM ord_list ord
		LEFT JOIN business business ON ord.business_code =
		business.business_code
		<where>
			<if test='ordState != null and ordState !="" '>
				ord.ord_state = #{ordState}
			</if>
		</where>
		ORDER BY ord.ord_date DESC, ord.ord_code DESC
	</select>

	<select id="getOrderDetailList" resultType="OrderDetailDVO">
		SELECT od.*,
		p.prod_name, p.prod_unit, p.prod_price
		FROM ord_d_list od
		JOIN product p
		ON od.prod_code = p.prod_code
		WHERE od.ord_code = #{ordCode}

	</select>

	<select id="getBusinessList" resultType="BusinessListVO"> <!-- 거래처 목록조회 -->
		SELECT business_code,
		business_name, business_manager,
		business_manager_phone
		FROM business
		WHERE business_type = 1
	</select>

	<select id="getProductList" resultType="ProductListVO"> <!-- 상품 목록조회 -->
		SELECT prod_code, prod_name, prod_unit, prod_price
		FROM product
	</select>

	<!-- 여러 개의 ProductLotVO 객체를 반환하는 SQL 쿼리 -->
	<select id="getProductLotList" parameterType="String" resultType="ProductLotVO">
		SELECT
			pl.prod_lot_code, pl.prod_count,
			pl.prod_input_count, pl.prod_output_count,
			pl.prod_code, p.prod_name

		FROM prod_lot pl
		LEFT JOIN product p ON pl.prod_code = p.prod_code
		WHERE pl.prod_code = #{prodCode} AND pl.prod_count > 0
		ORDER BY pl.prod_lot_code
	</select>
	
	<select id="getEmployeeList" resultType="EmployeeVO">
		SELECT user_code, user_name, user_phone
		FROM employee
		WHERE dept_code = 'dept003'
	</select>

</mapper>