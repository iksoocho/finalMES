<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.demo.material.mapper.MaterialMapper">
	<!-- 발주 -->
	<select id="getMaterialOrderList" resultType="MatOrderVO">
		SELECT
		mo.mat_or_code,
		mo.mat_or_name,
		mo.mat_code,
		b.business_code,
		b.business_name,
		mo.mat_or_count,
		mo.mat_or_date,
		mo.mat_or_due_date,
		mo.mat_or_manager
		FROM mat_order mo
		JOIN business b ON mo.business_code = b.business_code
		JOIN mat_order_info moi ON mo.mat_or_code = moi.mat_or_code
	</select>

	<!-- 발주상세 -->
	<select id="getMaterialOrdInfoList" resultType="MatOrderInfoVO">
		SELECT
		mo.mat_or_code,
		mo.mat_or_name,
		mo.mat_code,
		m.mat_name,
		b.business_code,
		b.business_name,
		mo.mat_or_count,
		mo.mat_or_date,
		mo.mat_or_due_date,
		mo.mat_or_manager,
		mo.mat_or_state
		FROM mat_order mo
		LEFT JOIN business b ON mo.business_code = b.business_code
		LEFT JOIN mat_order_info moi ON mo.mat_or_code = moi.mat_or_code
		JOIN material m ON mo.mat_code=m.mat_code
		ORDER BY mat_or_code DESC

	</select>

	<!-- 발주 목록 쪽 거래처 -->
	<select id="getMaterialOrdInfoList1" resultType="MatOrderInfoVO">
		SELECT
		b.business_code,
		b.business_name,
		m.mat_code,
		m.mat_name
		FROM
		business b
		JOIN
		mat_order mo ON b.business_code = mo.business_code
		JOIN
		material m ON mo.mat_code = m.mat_code
		GROUP BY
		b.business_code, b.business_name, m.mat_code, m.mat_name
	</select>

	<!-- 발주 자재 관리 -->
	<select id="getOriginMaterialList" resultType="OriginMaterialVO">
		SELECT *
		FROM material ORDER BY mat_code DESC


	</select>

	<!-- 발주 거래처 관리 -->
	<!-- <select id="getMatBusiness" resultType="OriginMaterialVO"> -->
	<!-- SELECT -->
	<!-- m.mat_code, -->
	<!-- m.mat_name, -->
	<!-- m.mat_unit, -->
	<!-- m.mat_standard, -->
	<!-- m.mat_safe_stock, -->
	<!-- ml.mat_count, -->
	<!-- b.business_name, -->
	<!-- b.business_code, -->
	<!-- COUNT(mr.mat_lot_code) AS deal -->
	<!-- FROM material m -->
	<!-- JOIN mat_lot ml ON m.mat_code = ml.mat_code -->
	<!-- JOIN mat_return mr ON ml.mat_lot_code = mr.mat_lot_code -->
	<!-- FULL JOIN business b ON mr.business_code = b.business_code -->
	<!-- GROUP BY -->
	<!-- m.mat_code, -->
	<!-- m.mat_name, -->
	<!-- m.mat_unit, -->
	<!-- m.mat_standard, -->
	<!-- m.mat_safe_stock, -->
	<!-- ml.mat_count, -->
	<!-- b.business_name, -->
	<!-- b.business_code -->
	<!-- </select> -->



	<!-- 자재관리 -->
	<select id="getOriginMaterialList1"
		resultType="OriginMaterialVO">
		SELECT m.mat_code,
		m.mat_name,
		m.mat_safe_stock,
		m.mat_unit,
		m.mat_standard,
		ml.mat_count
		FROM material m
		JOIN mat_lot ml ON m.mat_code = ml.mat_code
	</select>

	<!-- 출고 관리 -->
	<select id="getOutputList" resultType="MatOutputVO">
		SELECT
		MO.mat_out_code,
		MO.business_code,
		B.business_name,
		ML.mat_manager,
		M.mat_name,
		ML.mat_lot_code,
		ML.mat_count,
		MO.mat_out_count,
		MO.mat_out_date
		FROM
		mat_output MO
		JOIN
		mat_lot ML ON MO.mat_lot_code=ML.mat_lot_code
		JOIN
		business B ON MO.business_code = B.business_code
		JOIN
		material M ON ML.mat_code=M.mat_code
	</select>

	<!-- 입고 관리 -->
	<select id="getInputList" resultType="MatInputVO">
		SELECT mo.mat_or_code,
		mo.mat_or_name,
		mo.mat_code,
		m.mat_name,
		m.mat_unit,
		m.mat_standard,
		b.business_code,
		b.business_name,
		mo.mat_or_count,
		mo.mat_or_date,
		mo.mat_or_due_date,
		mo.mat_or_manager,
		mo.mat_or_state,
		mi.mat_ins_date,
		mi.mat_ins_code,
		mi.mat_ins_good,
		mi.mat_ins_bad,
		mi.mat_ins_count,
        ml.mat_lot_code,
        ml.mat_input_date
		FROM mat_order mo
		LEFT JOIN mat_inspection mi ON mo.mat_or_code =
		mi.mat_or_code
		LEFT JOIN business b ON mo.business_code =
		b.business_code
		LEFT JOIN mat_order_info moi ON mo.mat_or_code =
		moi.mat_or_code
		JOIN material m ON mo.mat_code = m.mat_code
        LEFT JOIN mat_lot ml ON m.mat_code = ml.mat_code
		WHERE
		mi.mat_ins_code IS NOT NULL
		ORDER BY ml.mat_lot_code DESC

	</select>

	<!-- 입고 검수 -->
	<select id="getMatInsList" resultType="MatInspectionVO">
		SELECT mo.mat_or_code,
		mo.mat_or_name,
		mo.mat_code,
		m.mat_name,
		m.mat_unit,
		m.mat_standard,
		b.business_code,
		b.business_name,
		mo.mat_or_count,
		mo.mat_or_date,
		mo.mat_or_due_date,
		mo.mat_or_manager,
		mo.mat_or_state,
		mi.mat_ins_date,
		mi.mat_ins_code,
		mi.mat_ins_good,
		mi.mat_ins_bad
		FROM mat_order mo
		LEFT JOIN mat_inspection mi ON mo.mat_or_code = mi.mat_or_code
		LEFT JOIN business b ON mo.business_code = b.business_code
		LEFT JOIN mat_order_info moi ON mo.mat_or_code = moi.mat_or_code
		JOIN material m ON mo.mat_code = m.mat_code
		ORDER BY mat_or_code DESC
	</select>

	<!-- 반품 관리 -->
	<select id="getReturnList" resultType="MatReturnVO">
		SELECT MR.mat_re_code,
		B.business_name,
		M.mat_code,
		M.mat_name,
		ML.mat_lot_code,
		ML.mat_count,
		MR.mat_re_count,
		MR.mat_re_content,
		MR.mat_re_start_date,
		MR.mat_re_manager,
		MR.mat_re_state
		FROM mat_return MR
		JOIN business B ON MR.business_code =
		B.business_code
		JOIN mat_lot ML ON MR.mat_lot_code = ML.mat_lot_code
		JOIN material M ON ML.mat_code = M.mat_code
	</select>

	<!-- 발주 등록 -->
	<insert id="insertMatOrder" parameterType="MatOrderVO">
		<selectKey keyProperty="matOrCode" resultType="String"
			order="BEFORE">
			SELECT 'MATORD' || LPAD(mat_or_code_seq.nextval, 3, 0) FROM
			DUAL
		</selectKey>
		INSERT INTO mat_order
		(
		mat_code,
		business_code,
		mat_or_date,
		mat_or_manager,
		mat_or_count,
		mat_or_name,
		mat_or_state,
		mat_or_due_date
		)
		VALUES
		(
		#{matCode},
		#{businessCode},
		#{matOrDate},
		#{matOrManager},
		#{matOrCount},
		#{matOrName},
		0,
		#{matOrDueDate}
		)
	</insert>

	<insert id="insertMatOrderInfo" parameterType="MatOrderInfoVO">
		INSERT INTO
		mat_order_info
		(
		mat_or_info_code,
		mat_code,
		mat_ori_count,
		mat_or_due_date

		)
		VALUES
		(
		#{matOrInfoCode},
		#{matCode},
		#{matOriCount},
		#{matOrDueDate}

		)

	</insert>


	<!-- 발주 업데이트 -->
	<update id="updateMatOrder" parameterType="String">
		UPDATE mat_order
		SET
		mat_or_count = #{matOrCount},
		mat_or_due_date = #{matOrDueDate}
		WHERE
		mat_or_code = #{matOrCode}
	</update>

	<delete id="deleteMatOrder" parameterType="String">
		DELETE FROM mat_order
		WHERE mat_or_code = #{matOrCode}
	</delete>


	<!-- 입고 페이지 검수 인서트 -->
	<insert id="insertMatIns" parameterType="MatInspectionVO">
		<selectKey keyProperty="matInsCode" resultType="string"
			order="BEFORE">
			SELECT 'MATINS' || LPAD(mat_ins_code_seq.nextval, 3, 0) FROM
			DUAL
		</selectKey>
		INSERT INTO mat_inspection
		(
		mat_ins_good,
		mat_ins_bad,
		mat_ins_date,
		mat_or_code,
		mat_note
		)
		VALUES
		(
		#{matInsGood},
		#{matInsBad},
		#{matInsDate},
		#{matOrCode},
		#{matNote}
		)
	</insert>

	<!-- 입고 페이지 입고 인서트 -->
	<insert id="matInputInsert" parameterType="MatInputVO">
		<selectKey keyProperty="matLotCode" resultType="string"
			order="BEFORE">
			SELECT 'MATLOT' || LPAD(mat_lot_code_seq.nextval, 3, 0) FROM
			DUAL
		</selectKey>
		INSERT INTO mat_lot
			(
			mat_input_date,
			mat_manager,
			mat_code,
			mat_input_count,
			mat_out_count,
			mat_count
			)
		VALUES
			(
			#{matInputDate},
			#{matManager},
			#{matCode},
			#{matInputCount},
			#{matOutCount},
			#{matCount}
			)
	</insert>
	
	<select id="getBadMatList" parameterType="BadMatVO">
		SELECT  mb.mat_bad_code,
		        bm.bad_mat_code,
		        bm.bad_mat_name
		FROM mat_bad mb
		RIGHT JOIN bad_material bm ON bm.bad_mat_code = bm.bad_mat_code
	
	</select>
</mapper>